<#@ template language="C#" visibility="internal" #>
<#@ import namespace="System.Linq"#>

////////////////////////////////////////////////////////////////////////////////
// This file is auto-generated by ConfigAssets package.
// Do not modify this file.
// It will be overwritten next time the generator is run.
////////////////////////////////////////////////////////////////////////////////
using me.caneva20.ConfigAssets;
using System.Collections.Generic;
using UnityEditor;
using SettingsScope = UnityEditor.SettingsScope;

public static class ConfigAssetsSettingsProvider {
    private static SettingsProvider CreateProvider<T>(string name, SettingsScope scope, IEnumerable<string> keywords) where T : Config<T> {
        return new SettingsProvider($"Config assets/{name}", scope, keywords) {
            guiHandler = _ => Editor.CreateEditor(Config<T>.Instance).OnInspectorGUI()
        };
    }

    <#foreach (var provider in Providers) {
          string keywords;

          if (provider.Keywords != null && provider.Keywords.Length > 0) {
              keywords = $"new string[] {{{string.Join(", ", provider.Keywords.Select(x => $"\"{x}\""))}}}";
          } else {
              keywords = "null";
          }
          
          var scope = $"SettingsScope.{provider.Scope}";
        #>
    [SettingsProvider]
    public static SettingsProvider Create_<#= provider.Name #>_Provider() {
        return CreateProvider<<#= provider.NamespacedName #>>("<#=provider.DisplayName#>", <#=scope#>, <#=keywords#>);
    }
<#}#>
}